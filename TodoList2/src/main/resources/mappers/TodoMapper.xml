<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.zerock.todolist2.mapper.TodoMapper">

    <select id="getTime" resultType="string">
        select now()
    </select>

    <insert id="insert">
        insert into todo (title, dueDate, writer) values (#{title}, #{dueDate}, #{writer})
    </insert>

    <select id="selectAll" resultType="org.zerock.todolist2.domain.TodoVO">
        select * from todo order by tno desc
    </select>

    <select id="selectOne" resultType="org.zerock.todolist2.domain.TodoVO">
        select * from todo where tno = #{tno}
    </select>

    <delete id="delete">
        delete from todo where tno = #{tno}
    </delete>

    <update id="update">
        update todo set title = #{title}, dueDate = #{dueDate}, done = #{done} where tno = #{tno}
    </update>

    <sql id="search">
        <where>
            <if test="types != null and types.length > 0">
                <foreach collection="types" item="type" open="(" close=")" separator=" OR ">
                    <if test="type == 't'.toString()">
                        title like concat('%', #{keyword}, '%')
                    </if>
                    <if test="type == 'w'.toString()">
                        writer like concat('%', #{keyword}, '%')
                    </if>
                </foreach>
            </if>

            <if test="done">
                <trim prefix="and">
                    done = 1
                </trim>
            </if>

            <if test="from != null and to != null">
                <trim prefix="and">
                    dueDate between #{from} and #{to}
                </trim>
            </if>
        </where>
    </sql>
    
    <select id="selectList" resultType="org.zerock.todolist2.domain.TodoVO">
        select * from todo
        
        <include refid="search"></include>
        
        order by tno desc limit #{skip}, #{size}
    </select>

    <select id="findByWriterWithPaging" resultType="org.zerock.todolist2.dto.TodoDTO" parameterType="map">
        SELECT * FROM todo
        WHERE writer = #{writer}
        ORDER BY tno DESC
            LIMIT #{pageRequestDTO.skip}, #{pageRequestDTO.size}
    </select>


    <select id="getCount" resultType="int">
        select count(tno) from todo
        <include refid="search"></include>
    </select>
</mapper>